{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scart\\\\Top5Lists_HW4\\\\Top5Lists_HW4\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n  const [text, setText] = useState(\"\");\n\n  function handleDragStart(event, targetId) {\n    event.dataTransfer.setData(\"item\", targetId);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    console.log(\"entering\");\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    console.log(\"leaving\");\n    setDraggedTo(false);\n  }\n\n  function handleDrop(event, targetId) {\n    event.preventDefault();\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false);\n    console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\"); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {}\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(ListItem, {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: event => {\n      handleDragStart(event, index + 1);\n    },\n    onDragOver: event => {\n      handleDragOver(event, index + 1);\n    },\n    onDragEnter: event => {\n      handleDragEnter(event, index + 1);\n    },\n    onDragLeave: event => {\n      handleDragLeave(event, index + 1);\n    },\n    onDrop: event => {\n      handleDrop(event, index + 1);\n    },\n    draggable: \"true\",\n    sx: {\n      display: 'flex',\n      p: 1\n    },\n    style: {\n      fontSize: '48pt',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleToggleEdit,\n        \"aria-label\": \"edit\",\n        children: /*#__PURE__*/_jsxDEV(EditIcon, {\n          style: {\n            fontSize: '48pt'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        flexGrow: 1\n      },\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, props.key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"item-\" + (index + 1),\n      name: \"name\",\n      className: \"list-card\",\n      onKeyPress: handleKeyPress //onChange={handleUpdateText}\n      ,\n      defaultValue: props.text,\n      inputProps: {\n        style: {\n          fontSize: 48\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: 24\n        }\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(Top5Item, \"tnfv9lMRiFT6Nh1VeqG2qbZr8Yo=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/scart/Top5Lists_HW4/Top5Lists_HW4/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","TextField","Box","ListItem","IconButton","EditIcon","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","text","setText","handleDragStart","event","targetId","dataTransfer","setData","handleDragOver","preventDefault","handleDragEnter","console","log","handleDragLeave","handleDrop","sourceId","getData","substring","indexOf","addMoveItemTransaction","handleToggleEdit","stopPropagation","toggleEdit","newActive","setIsItemEditActive","handleKeyPress","code","index","itemClass","cardElement","display","p","fontSize","width","flexGrow","key","style"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { GlobalStoreContext } from '../store'\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [editActive, setEditActive] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function handleDragStart(event, targetId) {\r\n        event.dataTransfer.setData(\"item\", targetId);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        console.log(\"entering\");\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        console.log(\"leaving\");\r\n        setDraggedTo(false);\r\n    }\r\n\r\n    function handleDrop(event, targetId) {\r\n        event.preventDefault();\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        console.log(\"handleDrop (sourceId, targetId): ( \" + sourceId + \", \" + targetId + \")\");\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n    function handleToggleEdit(event) {\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsItemEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n    function handleKeyPress(event) {\r\n        if(event.code === \"Enter\") {\r\n           \r\n            \r\n        }\r\n    }\r\n    let { index } = props;\r\n\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    let cardElement =\r\n            <ListItem\r\n                id={'item-' + (index+1)}\r\n                key={props.key}\r\n                className={itemClass}\r\n                onDragStart={(event) => {\r\n                    handleDragStart(event, (index+1))\r\n                }}\r\n                onDragOver={(event) => {\r\n                    handleDragOver(event, (index+1))\r\n                }}\r\n                onDragEnter={(event) => {\r\n                    handleDragEnter(event, (index+1))\r\n                }}\r\n                onDragLeave={(event) => {\r\n                    handleDragLeave(event, (index+1))\r\n                }}\r\n                onDrop={(event) => {\r\n                    handleDrop(event, (index+1))\r\n                }}\r\n                draggable=\"true\"\r\n                sx={{ display: 'flex', p: 1 }}\r\n                style={{\r\n                    fontSize: '48pt',\r\n                    width: '100%'\r\n                }}\r\n            >\r\n            <Box sx={{ p: 1 }}>\r\n                <IconButton onClick={handleToggleEdit}aria-label='edit'>\r\n                    <EditIcon style={{fontSize:'48pt'}}  />\r\n                </IconButton>\r\n            </Box>\r\n                <Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\r\n            </ListItem>\r\n\r\nif (editActive) {\r\n    cardElement =\r\n        <TextField\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id={\"item-\" + (index+1)}\r\n            name=\"name\"\r\n            className='list-card'\r\n            onKeyPress={handleKeyPress}\r\n            //onChange={handleUpdateText}\r\n            defaultValue={props.text}\r\n            inputProps={{style: {fontSize: 48}}}\r\n            InputLabelProps={{style: {fontSize: 24}}}\r\n            autoFocus\r\n        />\r\n}\r\nreturn (\r\n    cardElement\r\n);\r\n    \r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}